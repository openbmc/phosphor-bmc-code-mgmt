{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b9aa3d91_9ac9ce2f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 76
      },
      "lineNbr": 0,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-30T23:39:08Z",
      "side": 1,
      "message": "I think we need some meson option to safeguard this compilation since you added a conditional inclusion of libpldm_dep.\n\nLet\u0027s say the meson option is software-common-code and enabled by default.\n\nWe can define a build flag, lets say\n\nbuild_common_code \u003d (get_option(\u0027software-common-code\u0027).allowed() or get_option(\u0027Updater-X\u0027).allowed() or ...)\n\nif (build_common_code)\n// Build the common code\nendif\n\nThe common code will not build from openbmc/openbmc when no package-config (for updater using common code) is enabled.\n\nAlso, the conditional inclusion of libpldm will also need a \"or\" of this build flag.\n\nThis is a suggestion so you would need to try and we can refine on the nomenclature.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7cd73964_25cf5203",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 76
      },
      "lineNbr": 0,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Did not manage to resolve all comments today.\n\nWill try to fix the rest tomorrow.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2bf81580_e0f55c3a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 76
      },
      "lineNbr": 0,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-04T14:15:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b9aa3d91_9ac9ce2f",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca04bbcb_d3ad500e",
        "filename": "common/README.md",
        "patchSetId": 76
      },
      "lineNbr": 2,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-31T19:53:51Z",
      "side": 1,
      "message": "\\# Common Firmware Library\n\nPlease write this Readme from intent of common layer since you are in common dir. For example, Explain the intent of common layer.\nAnd then explain how the common layer can be used in daemons, citing the NOP updater as an example.\n\nKeep the reference to design.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c867bef7_2e11d944",
        "filename": "common/README.md",
        "patchSetId": 76
      },
      "lineNbr": 2,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca04bbcb_d3ad500e",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea0432ff_3b7312a2",
        "filename": "common/README.md",
        "patchSetId": 76
      },
      "lineNbr": 16,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-31T19:53:51Z",
      "side": 1,
      "message": "\"\n\\## PLDM Package Parser\n\nThe PackageParser in the pldm directory currently references a following revision from the openbmc/pldm repository -\n\n\u003cgithub reference\u003e\n\nHowever, this code will be deprecated and replaced with the package parsing APIs provided by libpldm once they become available.\n\nThe PackageParser has a maximum supported PLDM firmware package revision of 1.0.0.\n\"\n\nProbably word it something like above.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7255b264_3a166006",
        "filename": "common/README.md",
        "patchSetId": 76
      },
      "lineNbr": 16,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ea0432ff_3b7312a2",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a694654_aaa76ac6",
        "filename": "common/include/device.hpp",
        "patchSetId": 76
      },
      "lineNbr": 20,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-31T20:55:03Z",
      "side": 1,
      "message": "nit: Represents",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8fc5573_f5537049",
        "filename": "common/include/device.hpp",
        "patchSetId": 76
      },
      "lineNbr": 20,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "removed the comment",
      "parentUuid": "6a694654_aaa76ac6",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "195bb18e_8cafaba3",
        "filename": "common/include/device.hpp",
        "patchSetId": 76
      },
      "lineNbr": 21,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-31T20:55:03Z",
      "side": 1,
      "message": "I am not sure what does this comment mean? Can you be more explicit?",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "486bf37e_15e620df",
        "filename": "common/include/device.hpp",
        "patchSetId": 76
      },
      "lineNbr": 21,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "removed the comment to avoid any ambiguity.",
      "parentUuid": "195bb18e_8cafaba3",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "744b89bc_502d10c5",
        "filename": "common/include/device.hpp",
        "patchSetId": 76
      },
      "lineNbr": 43,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "Let\u0027s call this updateDevice.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed71f5e4_a0e102b8",
        "filename": "common/include/device.hpp",
        "patchSetId": 76
      },
      "lineNbr": 43,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "744b89bc_502d10c5",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ed7cab3_2677027d",
        "filename": "common/include/device.hpp",
        "patchSetId": 76
      },
      "lineNbr": 45,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "Let\u0027s drop \"std::unique_ptr\u003cSoftwareActivationProgress\u003e\u0026 activationProgress\" from this API signature and define another API \"setUpdateProgress()\" which gets called by updateDevice() to update the activation progress.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cea67b6a_99a5143c",
        "filename": "common/include/device.hpp",
        "patchSetId": 76
      },
      "lineNbr": 45,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-04T14:13:11Z",
      "side": 1,
      "message": "SoftwareActivationProgress is already a wrapper around the dbus interface.\nUpdated its inheritance to private so it only exposes \u0027setProgress\u0027 method now.\nThat should cover the use-case.",
      "parentUuid": "6ed7cab3_2677027d",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f118290e_79675d83",
        "filename": "common/include/device.hpp",
        "patchSetId": 76
      },
      "lineNbr": 50,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-31T21:01:10Z",
      "side": 1,
      "message": "Please refer my comment here -\n\nhttps://gerrit.openbmc.org/c/openbmc/phosphor-bmc-code-mgmt/+/74893/comment/2743ca5c_c8adce04/",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "98ab46de_8a04a661",
        "filename": "common/include/device.hpp",
        "patchSetId": 76
      },
      "lineNbr": 50,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-06T11:25:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f118290e_79675d83",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b291bec_29d551d5",
        "filename": "common/include/device.hpp",
        "patchSetId": 76
      },
      "lineNbr": 55,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-31T21:01:10Z",
      "side": 1,
      "message": "Do you think it will be better to make this a var with a default value rather than virtual function. Constructor can take in_arg?\nMy intent is to avoid a virtual function if not needed and only do it for actions rather than properties.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94e395e3_d3064200",
        "filename": "common/include/device.hpp",
        "patchSetId": 76
      },
      "lineNbr": 55,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "My preference is to avoid any state if possible.\n\nSo i would rather have a function to produce a property when it is needed than to have a property on the class.\n\nThe reason for me is that the function is easier to test separately.\n\n\nAlso, i find it easier for implementing a code updater when i only have to override a few functions depending on the device.\n\nWhen we go into the direction of making optional arguments to the constructor, that may not scale so well. For example, when there are 2 int arguments with default value, the compiler will not be able to know which of those was supplied.",
      "parentUuid": "0b291bec_29d551d5",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eafbe4bc_6a63779a",
        "filename": "common/include/device.hpp",
        "patchSetId": 76
      },
      "lineNbr": 55,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-04T14:13:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "94e395e3_d3064200",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a66f8a6_e5d36965",
        "filename": "common/include/device.hpp",
        "patchSetId": 76
      },
      "lineNbr": 61,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "Shouldn\u0027t this be private as SoftwareUpdate is defined as a friend of this class.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2dfa93db_6a727e8d",
        "filename": "common/include/device.hpp",
        "patchSetId": 76
      },
      "lineNbr": 61,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "starting an update is one of the big features of the \u0027Device\u0027 class.\n\nOne of the reasons i had for making it public is that it would be easy to test.\n\n```\ntest/common/device/test_device_start_update_async_invalid_fd.cpp\n54:    co_await device-\u003estartUpdateAsync(image, applyTimeImmediate,\n\ntest/common/device/test_device_start_update_async_success.cpp\n80:    co_await device-\u003estartUpdateAsync(image2, applyTimeImmediate,\n\n```\n\nIf we make it private, we may have to do some tricks\n(or friend and create a test class), which i wanted to avoid.",
      "parentUuid": "1a66f8a6_e5d36965",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3db4e6dd_f091eae5",
        "filename": "common/include/device.hpp",
        "patchSetId": 76
      },
      "lineNbr": 66,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-31T20:55:03Z",
      "side": 1,
      "message": "The caller itself passed the config so they should know this type.\nWhere are you using this API right now?",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a9cb7100_ea2e0a26",
        "filename": "common/include/device.hpp",
        "patchSetId": 76
      },
      "lineNbr": 66,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "It\u0027s used in common/src/software.cpp,\n```\nstd::string Software::getRandomSoftwareId(Device\u0026 parent)\n```\n\nThe type is used to construct the software id.",
      "parentUuid": "3db4e6dd_f091eae5",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f07fbf6_69f9f13b",
        "filename": "common/include/device.hpp",
        "patchSetId": 76
      },
      "lineNbr": 97,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-31T19:53:51Z",
      "side": 1,
      "message": "rename pp to packageParser",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "500f89d6_1dfcd6c5",
        "filename": "common/include/device.hpp",
        "patchSetId": 76
      },
      "lineNbr": 97,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5f07fbf6_69f9f13b",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcf63277_ba91e88e",
        "filename": "common/include/device_config.hpp",
        "patchSetId": 76
      },
      "lineNbr": 6,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-31T20:55:03Z",
      "side": 1,
      "message": "device software configuration.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "974458f3_8efe2dd4",
        "filename": "common/include/device_config.hpp",
        "patchSetId": 76
      },
      "lineNbr": 6,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fcf63277_ba91e88e",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b229cf74_38b54a3f",
        "filename": "common/include/device_config.hpp",
        "patchSetId": 76
      },
      "lineNbr": 14,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-31T20:55:03Z",
      "side": 1,
      "message": "Lets call this SoftwareConfig instead as its the config for the software associated with the device not the device itself.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e684ca2d_60a9763e",
        "filename": "common/include/device_config.hpp",
        "patchSetId": 76
      },
      "lineNbr": 14,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-04T14:13:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b229cf74_38b54a3f",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9185e03_26adc45f",
        "filename": "common/include/device_config.hpp",
        "patchSetId": 76
      },
      "lineNbr": 18,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-31T19:53:51Z",
      "side": 1,
      "message": "Do you think it will be better to refer to schema here?\n\nhttps://github.com/openbmc/entity-manager/blob/master/schemas/firmware.json",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd0ed483_baff1eb1",
        "filename": "common/include/device_config.hpp",
        "patchSetId": 76
      },
      "lineNbr": 18,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-04T14:13:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9185e03_26adc45f",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81221c8f_f53b7b6b",
        "filename": "common/include/device_config.hpp",
        "patchSetId": 76
      },
      "lineNbr": 23,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-31T19:53:51Z",
      "side": 1,
      "message": "compatibleHardware",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa18258d_16e99caa",
        "filename": "common/include/device_config.hpp",
        "patchSetId": 76
      },
      "lineNbr": 23,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "81221c8f_f53b7b6b",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "207705bf_e72bbb66",
        "filename": "common/include/device_config.hpp",
        "patchSetId": 76
      },
      "lineNbr": 27,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-31T19:53:51Z",
      "side": 1,
      "message": "Lets call this configName",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab0a1958_8376a3d7",
        "filename": "common/include/device_config.hpp",
        "patchSetId": 76
      },
      "lineNbr": 27,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "207705bf_e72bbb66",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee7937b2_e5d5c778",
        "filename": "common/include/device_config.hpp",
        "patchSetId": 76
      },
      "lineNbr": 30,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-31T19:53:51Z",
      "side": 1,
      "message": "Do you actually see a need of configType anywhere in the code? My understanding is this refers to the EM configuration interface name and would be needed here.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d9926170_062b38cb",
        "filename": "common/include/device_config.hpp",
        "patchSetId": 76
      },
      "lineNbr": 30,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "According to the comment, the class represents the configuration obtained from dbus.\n\nThe config \u0027Type\u0027 is used for example to construct software id.",
      "parentUuid": "ee7937b2_e5d5c778",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d51e95cf_8373a7ab",
        "filename": "common/include/device_config.hpp",
        "patchSetId": 76
      },
      "lineNbr": 33,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-31T19:53:51Z",
      "side": 1,
      "message": "Do you use objPathConfig anywhere in your implementations?\n\nWe would need inventoryObjectPath for creating association but i don\u0027t see a use of configuration object path at the top of my head.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c83a8e68_2c0534de",
        "filename": "common/include/device_config.hpp",
        "patchSetId": 76
      },
      "lineNbr": 33,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Yes, not needed. Dropped it.",
      "parentUuid": "d51e95cf_8373a7ab",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2743ca5c_c8adce04",
        "filename": "common/include/device_config.hpp",
        "patchSetId": 76
      },
      "lineNbr": 34,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-31T20:55:03Z",
      "side": 1,
      "message": "Let\u0027s extend this class to also define a function which can help to get the inventory item associated with this software config. For example https://grok.openbmc.org/xref/openbmc/dbus-sensors/src/Utils.cpp?r\u003d2e46696724a89cd355d290fb71a4b8c481012758#693.\n\nThe function should take subtreePath and interfaceName to look for in the parent tree and shall return the inventory item path.\n\nIn turn the Updater shall call this API and pass the inventory item as in_arg into Device constructor or you can also extend the config itself to add this arg, that way you shall also be able to drop this virtual function -\n\n    virtual sdbusplus::async::task\u003cstd::string\u003e\n        getInventoryItemObjectPath() \u003d 0;",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31514767_3c01b922",
        "filename": "common/include/device_config.hpp",
        "patchSetId": 76
      },
      "lineNbr": 34,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-06T11:25:02Z",
      "side": 1,
      "message": "Changed \u0027SoftwareConfig\u0027 to store the object path of our configuration.\n\n\u003e Let\u0027s extend this class to also define a function which can help to get the inventory item associated with this software config\n\nThe device can then call \u0027getInventoryItemObjectPath\u0027 on its SoftwareConfig\nwhich will then get the path of its inventory item via the object mapper.\n\nLet me know if you think the implementation is correct 👍",
      "parentUuid": "2743ca5c_c8adce04",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15f94a39_8359ac12",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 16,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "Can you please update this wording to reflect the intent rather than or in addition to what you are doing. I read it multiple times but still i couldn\u0027t figure out what it means.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9faf16b1_58191d68",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 16,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "https://gerrit.openbmc.org/c/openbmc/sdbusplus/+/77440\n\nI need the class to initialize a member variable of ```\nsdbusplus::aserver::xyz::openbmc_project::software::\n        ActivationProgress\u003cSoftware\u003e```\n\notherwise i will receive clang-tidy errors.",
      "parentUuid": "15f94a39_8359ac12",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "96d329a5_ee7cf250",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 16,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-04T16:06:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9faf16b1_58191d68",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4bb73aa_451f064c",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 17,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "I have provided you the comment in Device class. You don\u0027t need to expose this interface and can handle this by providing an updateProgress API.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d521c6a_96f0a4c6",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 17,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "https://gerrit.openbmc.org/c/openbmc/sdbusplus/+/77440\n\nThe property would otherwise be uninitialized.\nDue to the access restriction we have to inherit from the class to initialized this property.\n\nPlease review the linked patch, it is not for merge, but i would like a comment if i am right about this or not.",
      "parentUuid": "a4bb73aa_451f064c",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e64a3541_93106193",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 17,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-04T14:13:11Z",
      "side": 1,
      "message": "\u003e handle this by providing an updateProgress API.\n\nDone.",
      "parentUuid": "9d521c6a_96f0a4c6",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b79d15e7_bad00344",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 40,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "I see you are inheriting only Activation, is the comment old?",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba6b5f1c_6789f49a",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 40,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Yes, deleted the outdated comment.",
      "parentUuid": "b79d15e7_bad00344",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2980ff7d_65c30286",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 41,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "Please keep comments consistent with first char as capital across all places.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e8910aec_e006276c",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 41,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "2980ff7d_65c30286",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5a5aff7_55ab4aa8",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 45,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "Whats the use case for 2 constructors?\n\nPlease define one constructor Software(sdbusplus::async::context\u0026 ctx, Device\u0026 parent)\n\nAnd let\u0027s define a create API, lets call it createSoftware(), all other APIs to generate software_id should be called internally in createSoftware.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34f6e3df_0ab2fa7d",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 45,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-04T14:13:11Z",
      "side": 1,
      "message": "only using one public constructor now, made a private delegating constructor to handle the swid.",
      "parentUuid": "d5a5aff7_55ab4aa8",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d26de830_ddf20406",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 49,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "Not needed, handle the software_id generation internally.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88b9613f_ae0df98f",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 49,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-04T14:13:11Z",
      "side": 1,
      "message": "Done, using a private constructor to delegate.",
      "parentUuid": "d26de830_ddf20406",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f01e7ece_5d588232",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 55,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "Our -\u003e The",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28ed7940_8bd19697",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 55,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f01e7ece_5d588232",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ae58841_30e6e850",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 60,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "I suppose u can use SoftwareActivation::Activations?\n\nAlso, Patrick has suggested me in past not to use common interface directly, so lets use the definition from line#31.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49e58296_7f10ee7e",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 60,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-04T14:13:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ae58841_30e6e850",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ee6625c_3917898e",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 63,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "\"Add / remove the\"\nWhat\u0027s this comment about?",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ec4cf69_2e69da8a",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 63,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "It is to explain that this method is responsible to add or remove the dbus interface for activation blocks transition.\n\nLet me know if the comment should be removed.",
      "parentUuid": "7ee6625c_3917898e",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a70c7d88_f93c3d4f",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 72,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "Whats opt prefix here?\n\nAlso, why are you exposing a var rather than an API setActivationProgress? Please define an API for this interface just as you did for others.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f13100f5_6eb9d469",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 72,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-04T14:13:11Z",
      "side": 1,
      "message": "\u003e Whats opt prefix here?\n\nMeaning it can be nullptr (i do not normally expect unique_ptr to be nullptr when looking at code). Meant to increase readability.\n\n\u003e Please define an API for this interface just as you did for others.\n\nDone.",
      "parentUuid": "a70c7d88_f93c3d4f",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a5d6d65_3be07fb8",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 96,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "Should become private now.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15892153_00c0eabe",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 96,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Made it protected, so that we are still able to test this function.",
      "parentUuid": "1a5d6d65_3be07fb8",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "710f0304_eea0c036",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 99,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "Should become private now.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "881ab026_f939f6a9",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 99,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "710f0304_eea0c036",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ab68273_9c945d3a",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 102,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "Why are defining a private constructor?\n\nPlease define one constructor overall and then define an API like createSoftware as private function. That way its easier to understand whats the external interface.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37904d67_0d1a42df",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 102,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Agree. Deleted this, there is only the public constructor now.",
      "parentUuid": "9ab68273_9c945d3a",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "adff013e_7203d2cb",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 105,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "Remove it and define as static in .cpp file.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e6ae787c_c4647358",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 105,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "adff013e_7203d2cb",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0e1ca37_b2e691e6",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 112,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "Looks like opt means optional here. Based on your inferring everything is optional and you have marked every interface with opt which makes the prefix itself not necessary. I would suggest to drop it as the comments provide good detail.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d5a60e9b_9f68f891",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 112,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Every non-optional dbus interface, we inherit from it (only SoftwareActivation currently).\n\nIf we access the members like \u0027optActivationBlocksTransition\u0027 in some function. it is clear that the member is optional\nand may have to be checked.\n\nIf i would follow your suggestion to drop \u0027opt\u0027 prefix, that would not be obvious anymore.\n\nWhen reading code that uses \u0027activationBlocksTransition\u0027 variable, it may be then confusing to people why it is checked for nullptr.\n\n\nLet me know if you have a strong preference.",
      "parentUuid": "c0e1ca37_b2e691e6",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab67712f_3c2bdcdc",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 112,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-08T03:32:32Z",
      "side": 1,
      "message": "Using unique_ptr indicates that the variable may go out of scope, and therefore requires null checks before dereferencing. Even if you use the opt prefix to suggest optionality, the fact that it\u0027s a unique_ptr already implies this possibility. Therefore, it\u0027s more concise to omit the opt prefix in this case.",
      "parentUuid": "d5a60e9b_9f68f891",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5848c1ca_91faa376",
        "filename": "common/include/software.hpp",
        "patchSetId": 76
      },
      "lineNbr": 112,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-10T17:31:20Z",
      "side": 1,
      "message": "Done. Dropped the \u0027opt\u0027 from all of these",
      "parentUuid": "ab67712f_3c2bdcdc",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4621f55_3ae81965",
        "filename": "common/include/software_manager.hpp",
        "patchSetId": 76
      },
      "lineNbr": 40,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "This should be private as u r calling it in software_manager.cpp",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ec174f3_69e207e2",
        "filename": "common/include/software_manager.hpp",
        "patchSetId": 76
      },
      "lineNbr": 40,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "I would like to have this public to be able to use it in tests.\n\nThe flow is to get configuration, then setup the bus name.\n\nCurrently using it in some tests to avoid fetching the configuration,\nsince that requires the object mapper, which is not available when running unit tests locally.\n\n```\ntest/common/software/test_software_association.cpp\n24:    std::string service \u003d nopcu.setupBusName();\n78:    std::string service \u003d nopcu.setupBusName();\n132:    std::string service \u003d nopcu.setupBusName();\n```\n\nLet me know if there is another solution.",
      "parentUuid": "d4621f55_3ae81965",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c5c3dea_680ac586",
        "filename": "common/include/software_manager.hpp",
        "patchSetId": 76
      },
      "lineNbr": 40,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-04T18:58:23Z",
      "side": 1,
      "message": "Can you move this to test code instead -\n\nctx.get_bus().request_name(serviceNameFull.c_str());",
      "parentUuid": "6ec174f3_69e207e2",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09890f3f_6c968087",
        "filename": "common/include/software_manager.hpp",
        "patchSetId": 76
      },
      "lineNbr": 40,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-05T16:15:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3c5c3dea_680ac586",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a523d5d_dbf0cecd",
        "filename": "common/include/software_manager.hpp",
        "patchSetId": 76
      },
      "lineNbr": 49,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "Drop this virtual function and pass the EM configuration interface name list (fully qualified interface names) to the getConfiguration API as in_arg.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "044403d7_d473bb0b",
        "filename": "common/include/software_manager.hpp",
        "patchSetId": 76
      },
      "lineNbr": 49,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8a523d5d_dbf0cecd",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6dbac581_50c31cc8",
        "filename": "common/include/software_manager.hpp",
        "patchSetId": 76
      },
      "lineNbr": 50,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "Why do you have configuration API for MuxGpios in common class?",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e27e914_dd9f2db4",
        "filename": "common/include/software_manager.hpp",
        "patchSetId": 76
      },
      "lineNbr": 50,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Removed it.\n\nThe gpio mux feature is very much common but the configuration is not,\nit depends on the EM schema.",
      "parentUuid": "6dbac581_50c31cc8",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0de80bb9_1146e878",
        "filename": "common/include/software_manager.hpp",
        "patchSetId": 76
      },
      "lineNbr": 55,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "Drop this virtual function and pass the EM configuration interface name list (fully qualified interface names) to the getConfiguration API as in_arg.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "655ed3dc_5952e2a4",
        "filename": "common/include/software_manager.hpp",
        "patchSetId": 76
      },
      "lineNbr": 55,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0de80bb9_1146e878",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "554a94e5_572cd7fa",
        "filename": "common/include/software_manager.hpp",
        "patchSetId": 76
      },
      "lineNbr": 125,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "This has to be protected (not private) for child class to override.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e417708a_db9925b7",
        "filename": "common/include/software_manager.hpp",
        "patchSetId": 76
      },
      "lineNbr": 125,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "554a94e5_572cd7fa",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c0ec6a7_b2d167d0",
        "filename": "common/include/software_update.hpp",
        "patchSetId": 76
      },
      "lineNbr": 22,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "Why are u re-declaring these 3 functions? They declaration should already be part of inherited class (auto gen PDI code).",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bda14895_0bfde654",
        "filename": "common/include/software_update.hpp",
        "patchSetId": 76
      },
      "lineNbr": 22,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "we override those functions in \n```\ncommon/src/software_update.cpp\n```\n\nand since these are in class \"SoftwareUpdate::\", they have to be pre-declared,\notherwise there is no declaration.",
      "parentUuid": "5c0ec6a7_b2d167d0",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b05ac7f_e5366c98",
        "filename": "common/meson.build",
        "patchSetId": 76
      },
      "lineNbr": 4,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-31T19:53:51Z",
      "side": 1,
      "message": "Let\u0027s name this software_common_a or software_common_lib. dbus-sensors and few others follow this convention so lets use it.\n\nPlease change fwupdate to same.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0b0598bd_f546a2b4",
        "filename": "common/meson.build",
        "patchSetId": 76
      },
      "lineNbr": 4,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2b05ac7f_e5366c98",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cea6b436_32ee237b",
        "filename": "common/meson.build",
        "patchSetId": 76
      },
      "lineNbr": 17,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-31T19:53:51Z",
      "side": 1,
      "message": "I don\u0027t think we need to install this as it would be statically complied with the binaries? Don\u0027t see that happening in other repos.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91e0b16e_9d919708",
        "filename": "common/meson.build",
        "patchSetId": 76
      },
      "lineNbr": 17,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cea6b436_32ee237b",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7585e7be_8ea05249",
        "filename": "common/src/device.cpp",
        "patchSetId": 76
      },
      "lineNbr": 60,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "Have you verified if this move takes care of all the DBus interfaces at that objectPath as well? For example Version interface.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26198930_762af539",
        "filename": "common/src/device.cpp",
        "patchSetId": 76
      },
      "lineNbr": 60,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-04T14:13:11Z",
      "side": 1,
      "message": "I believe it does, as the \u0027Software\u0027 instance owns all its members.\nSo if it is destructed, so are all its members.",
      "parentUuid": "7585e7be_8ea05249",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f093fa0b_5753b44b",
        "filename": "common/src/device.cpp",
        "patchSetId": 76
      },
      "lineNbr": 147,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "Rather than exposing an object like this. Please provide an API in device class with name updateProgress or like and internally handle the Dbus object.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "827e7e3e_4da9454d",
        "filename": "common/src/device.cpp",
        "patchSetId": 76
      },
      "lineNbr": 147,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-04T14:13:11Z",
      "side": 1,
      "message": "Yes. I already had a wrapper class for the activation progress, updated that to now have private inheritance and only expose \u0027setProgress\u0027 method to distingush it from \u0027progress\u0027 method on the base class.\n\nSo the progress is now abstracted and the user code does not have access to anything outside the \u0027setProgress\u0027 method.",
      "parentUuid": "f093fa0b_5753b44b",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fdb612c_75994ce8",
        "filename": "common/src/device.cpp",
        "patchSetId": 76
      },
      "lineNbr": 149,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "Please check the state of success and eventually make the activation here.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3195cdf8_37724030",
        "filename": "common/src/device.cpp",
        "patchSetId": 76
      },
      "lineNbr": 149,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4fdb612c_75994ce8",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ed40f69_06433ccb",
        "filename": "common/src/software.cpp",
        "patchSetId": 76
      },
      "lineNbr": 18,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "What does this comment mean?",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e474f53d_647bdb34",
        "filename": "common/src/software.cpp",
        "patchSetId": 76
      },
      "lineNbr": 18,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "https://gerrit.openbmc.org/c/openbmc/sdbusplus/+/77440\n\nThe property would otherwise be uninitialized.\nDue to the access restriction we have to inherit from the class to initialized this property.\n\nPlease review the linked patch, it is not for merge, but i would like a comment if i am right about this or not.\n\nYou may remove the initialization of ```progress_``` and it should give the same error as in the linked patch.",
      "parentUuid": "3ed40f69_06433ccb",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0785d455_baac280b",
        "filename": "common/src/software.cpp",
        "patchSetId": 76
      },
      "lineNbr": 18,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-05T16:15:46Z",
      "side": 1,
      "message": "followed up on this with sdbusplus maintainers.",
      "parentUuid": "e474f53d_647bdb34",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c269aae2_9a9047fa",
        "filename": "common/src/software.cpp",
        "patchSetId": 76
      },
      "lineNbr": 73,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "Comment not useful, please drop it. Same at other places where you see comments which are implicit its better to drop them.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2367361d_620a20fd",
        "filename": "common/src/software.cpp",
        "patchSetId": 76
      },
      "lineNbr": 73,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-04T14:13:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c269aae2_9a9047fa",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "217f912c_a71f27c7",
        "filename": "common/src/software.cpp",
        "patchSetId": 76
      },
      "lineNbr": 76,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "Let\u0027s keep this only configName + randomId() as configName from EM can be set accordingly to the required value.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3cf87051_b6463efe",
        "filename": "common/src/software.cpp",
        "patchSetId": 76
      },
      "lineNbr": 76,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-04T14:13:11Z",
      "side": 1,
      "message": "Done. This will increase the chance of name collision though and drops any context as to the type of device (without looking at associations).",
      "parentUuid": "217f912c_a71f27c7",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50a53256_9c940586",
        "filename": "common/src/software.cpp",
        "patchSetId": 76
      },
      "lineNbr": 79,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "This doesn\u0027t have to be class member function. Please define this as static and you can drop it from private list in the class definition.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6ee28e7_ea39d9fc",
        "filename": "common/src/software.cpp",
        "patchSetId": 76
      },
      "lineNbr": 79,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "50a53256_9c940586",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce23f110_ebd76000",
        "filename": "common/src/software.cpp",
        "patchSetId": 76
      },
      "lineNbr": 165,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "Is \"this-\u003e\" needed? Same at other places.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16a02beb_0d9ba748",
        "filename": "common/src/software.cpp",
        "patchSetId": 76
      },
      "lineNbr": 165,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Simply matter of preference.\n\nExplicitly stating that we are calling a method on the instance.\nOtherwise it could also be a static method that we are calling.\n\nThis gives the reader some extra information, that the object path in \u0027path\u0027\nvariable is specific to the software instance.\n\nSo it is clear where the interface will be created.\n\nIf you have a strong preference to avoid \u0027this\u0027 keyword then i can remove it,\nbut \u0027this\u0027 helps me for example to see which functions can be static and which ones cannot (since they access member function/variable).",
      "parentUuid": "ce23f110_ebd76000",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d62c3968_4f1e11b0",
        "filename": "common/src/software.cpp",
        "patchSetId": 76
      },
      "lineNbr": 165,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-12T03:13:25Z",
      "side": 1,
      "message": "Lets drop this-\u003e. I see it at multiple places in this file and check if its in other files too.",
      "parentUuid": "16a02beb_0d9ba748",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "511f3676_385c3790",
        "filename": "common/src/software.cpp",
        "patchSetId": 76
      },
      "lineNbr": 188,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "Please dine objectPath as a private var, instead of computing it every time.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7859a43d_2569f8e9",
        "filename": "common/src/software.cpp",
        "patchSetId": 76
      },
      "lineNbr": 188,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "It is computed only a few times. \nThere is no loop or such where it is computed.\n\nSince the object path can be computed with software id, \nwe would be duplicating the information when creating the extra class member.\n\nI agree that the extra member might make it more efficient, but\nlets not optimize the implementation just yet.",
      "parentUuid": "511f3676_385c3790",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b16fdc7f_029acca2",
        "filename": "common/src/software.cpp",
        "patchSetId": 76
      },
      "lineNbr": 188,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-04T16:06:44Z",
      "side": 1,
      "message": "\u003e Please dine objectPath as a private var, instead of computing it every time.\n\nI don\u0027t think this would work as private var, since we need to access the object path in testcases, to trigger updates.",
      "parentUuid": "7859a43d_2569f8e9",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff2f506d_bc94cc5f",
        "filename": "common/src/software_manager.cpp",
        "patchSetId": 76
      },
      "lineNbr": 140,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-04T18:58:23Z",
      "side": 1,
      "message": "Can you remove the NOLINTBEGIN everywhere in code and handle the required warnings.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d61f31fc_e5351c70",
        "filename": "common/src/software_manager.cpp",
        "patchSetId": 76
      },
      "lineNbr": 140,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-05T16:15:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ff2f506d_bc94cc5f",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a44ebc7e_47b8864c",
        "filename": "common/src/software_manager.cpp",
        "patchSetId": 76
      },
      "lineNbr": 141,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "I think we need to change this API to something better such as initializeDevices(), so it can do this iteration logic and get all Device configuration of this type. Let\u0027s discussion on this in person as i also don\u0027t see any caller of this API in SPI code updater.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a7ae5f6_3c2ea805",
        "filename": "common/src/software_manager.cpp",
        "patchSetId": 76
      },
      "lineNbr": 141,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-05T16:15:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a44ebc7e_47b8864c",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d810bf8_7e2bd49e",
        "filename": "common/src/software_update.cpp",
        "patchSetId": 76
      },
      "lineNbr": 33,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "Log line not useful, please drop this.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3933b296_d96a72e2",
        "filename": "common/src/software_update.cpp",
        "patchSetId": 76
      },
      "lineNbr": 33,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3d810bf8_7e2bd49e",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1944039_1535960c",
        "filename": "common/src/software_update.cpp",
        "patchSetId": 76
      },
      "lineNbr": 48,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-01T09:48:46Z",
      "side": 1,
      "message": "This log line doesn\u0027t look useful, if you need it better combine in next log line.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d402bfa1_63249c0f",
        "filename": "common/src/software_update.cpp",
        "patchSetId": 76
      },
      "lineNbr": 48,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a1944039_1535960c",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b618bff3_18f88d0f",
        "filename": "meson.build",
        "patchSetId": 76
      },
      "lineNbr": 73,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-31T19:53:51Z",
      "side": 1,
      "message": "Please add this dependency inside the common build flag as mentioned in other comment.",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0fbe3d71_aa3513fb",
        "filename": "meson.build",
        "patchSetId": 76
      },
      "lineNbr": 73,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-03T18:01:52Z",
      "side": 1,
      "message": "Added the \u0027common_build\u0027 meson variable for this purpose.",
      "parentUuid": "b618bff3_18f88d0f",
      "revId": "088c1add9f9a687c245ad53c46cb624a49e3a0f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}