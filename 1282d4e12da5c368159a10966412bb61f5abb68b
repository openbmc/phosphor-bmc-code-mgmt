{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "985fcf44_97860596",
        "filename": "bmc/obmc-flash-bmc",
        "patchSetId": 3
      },
      "lineNbr": 584,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-15T16:45:14Z",
      "side": 1,
      "message": "I\u0027m very confused by the use of \"sd{a,b,c}\" throughout this commit.  Aren\u0027t sdX used for the raw device and sdXN is used for partitions?  Wouldn\u0027t the boot partition be `sda0` or `sda1`?\n\nHow are we guaranteed that sda or sdb are the correct devices?  What happens if someone also plugs in a USB flash device?  Is there some kind of /sys/block identifier we could use instead?",
      "range": {
        "startLine": 582,
        "startChar": 0,
        "endLine": 584,
        "endChar": 27
      },
      "revId": "1282d4e12da5c368159a10966412bb61f5abb68b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f344d3bb_507fa8e6",
        "filename": "bmc/obmc-flash-bmc",
        "patchSetId": 3
      },
      "lineNbr": 584,
      "author": {
        "id": 1002108
      },
      "writtenOn": "2025-08-18T00:34:16Z",
      "side": 1,
      "message": "I tested this on the AST2700 EVB. Since the UFS probe runs first, the UFS devices consistently appear as sda and sdb, even when I plug in a USB device.\n\nIf the device order does not match the expectation in some cases, I would suggest that users add a udev rule to ensure the devices are assigned stable names.",
      "parentUuid": "985fcf44_97860596",
      "range": {
        "startLine": 582,
        "startChar": 0,
        "endLine": 584,
        "endChar": 27
      },
      "revId": "1282d4e12da5c368159a10966412bb61f5abb68b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d9ae586_a58870fe",
        "filename": "bmc/obmc-flash-bmc",
        "patchSetId": 3
      },
      "lineNbr": 610,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-15T16:45:14Z",
      "side": 1,
      "message": "Why?",
      "revId": "1282d4e12da5c368159a10966412bb61f5abb68b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88ef48bb_59847dd2",
        "filename": "bmc/obmc-flash-bmc",
        "patchSetId": 3
      },
      "lineNbr": 610,
      "author": {
        "id": 1002108
      },
      "writtenOn": "2025-08-18T00:34:16Z",
      "side": 1,
      "message": "Originally it was written as number\u003d\"${number##*mmcblk0p}\".\nI added a rootPartition variable to make it more flexible, but that causes ShellCheck to report SC2295.\nI followed the approach in [phosphor-bmc-code-mgmt](https://github.com/openbmc/phosphor-bmc-code-mgmt/blob/master/bmc/obmc-flash-bmc#L530) and added disable\u003dSC2295 since this is a false positive.",
      "parentUuid": "3d9ae586_a58870fe",
      "revId": "1282d4e12da5c368159a10966412bb61f5abb68b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ddfb182_63c8e3ac",
        "filename": "bmc/obmc-flash-bmc",
        "patchSetId": 3
      },
      "lineNbr": 616,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-15T16:45:14Z",
      "side": 1,
      "message": "Why?",
      "revId": "1282d4e12da5c368159a10966412bb61f5abb68b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "281a093c_471c1fa6",
        "filename": "bmc/obmc-flash-bmc",
        "patchSetId": 3
      },
      "lineNbr": 616,
      "author": {
        "id": 1002108
      },
      "writtenOn": "2025-08-18T00:34:16Z",
      "side": 1,
      "message": "The same reason as above.",
      "parentUuid": "7ddfb182_63c8e3ac",
      "revId": "1282d4e12da5c368159a10966412bb61f5abb68b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41a09f97_81e6fc67",
        "filename": "meson.options",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-15T16:45:14Z",
      "side": 1,
      "message": "Can we make this an enumeration?  We know which ones are supported.  Nobody is going to know that \"ufs\" is the appropriate option from what is written here.",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 20,
        "endChar": 0
      },
      "revId": "1282d4e12da5c368159a10966412bb61f5abb68b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2ececf8_7d43e7dd",
        "filename": "meson.options",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 1002108
      },
      "writtenOn": "2025-08-18T00:34:16Z",
      "side": 1,
      "message": "OK, Iâ€™ll change it to an enumeration.",
      "parentUuid": "41a09f97_81e6fc67",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 20,
        "endChar": 0
      },
      "revId": "1282d4e12da5c368159a10966412bb61f5abb68b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}