{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c3c38c3d_99446733",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-05-31T11:38:28Z",
      "side": 1,
      "message": "Outstanding comments are correct.",
      "revId": "1457f5a24ee918ff3c0932cd86bbc472de74f296",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4072396a_7c9091f7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-06-03T18:42:48Z",
      "side": 1,
      "message": "Thanks for review. Replied to your comments.",
      "revId": "1457f5a24ee918ff3c0932cd86bbc472de74f296",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "563e72bd_87faa007",
        "filename": "activation.hpp",
        "patchSetId": 3
      },
      "lineNbr": 179,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2024-05-31T06:06:11Z",
      "side": 1,
      "message": "This is a real D-Bus interface, but it\u0027s missing the dbus object path.\nI suspect this won\u0027t work as your expected.\n\nPossibly you want to inherit this interface in ActivationInherit, so that the Activation object really implements the `ApplyTime` interface.",
      "revId": "1457f5a24ee918ff3c0932cd86bbc472de74f296",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a88e596_7ca386b6",
        "filename": "activation.hpp",
        "patchSetId": 3
      },
      "lineNbr": 179,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-05-31T11:40:41Z",
      "side": 1,
      "message": "You might also need to adjust the constructor parameters on `ApplyTimeIntf` so that it does not emit \"object added\" and \"object removed\" signals.",
      "parentUuid": "563e72bd_87faa007",
      "revId": "1457f5a24ee918ff3c0932cd86bbc472de74f296",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e63bfa3b_e498b3f4",
        "filename": "activation.hpp",
        "patchSetId": 3
      },
      "lineNbr": 179,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-06-03T18:42:48Z",
      "side": 1,
      "message": "The ApplyTime interface is not hosted by CodeUpdater Daemons at the moment. Its with the phosphor-settingsd. So, i suggest its better to keep that flow as such. Also, the ApplyTime interface would only be applicable for unstructured http Push updates (where ApplyTime and Image Push comes as 2 different HTTP requests) which are deprecated in favor of Multipart HTTP push updates. So, intent is to support Unstructured HTTP push updates only for BMC for backwards compatibility and rest all should use Multipart HTTP Push based updates as recommended by Redfish. I have already created a patch for this on BMCWeb side - https://gerrit.openbmc.org/c/openbmc/bmcweb/+/71743. Once we have a single code updater daemon within phophor-bmc-code-mgmt we don\u0027t have to make that daemon to explicitly check for this property as it will come as part of startUpdate D-Bus interface.",
      "parentUuid": "0a88e596_7ca386b6",
      "revId": "1457f5a24ee918ff3c0932cd86bbc472de74f296",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6322a0a1_f99df43f",
        "filename": "activation.hpp",
        "patchSetId": 3
      },
      "lineNbr": 179,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2024-06-04T02:01:32Z",
      "side": 1,
      "message": "Checking the following commit that uses the \"apply time\", it looks like you only want to \"store\" the apply time here, and not to create a DBus interface.\nIf it\u0027s true, then you do not need to create the interface here, only add a `RequestedApplyTimes` in the activation class should be enough.",
      "parentUuid": "e63bfa3b_e498b3f4",
      "revId": "1457f5a24ee918ff3c0932cd86bbc472de74f296",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4b25ba2_7bb87c6c",
        "filename": "activation.hpp",
        "patchSetId": 3
      },
      "lineNbr": 345,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-05-31T11:40:41Z",
      "side": 1,
      "message": "Why does this end up being a `unique_ptr`?  Isn\u0027t it something we always need?  It doesn\u0027t look like there is any code path where it is ever added...  I\u0027m surprised ApplyTime wasn\u0027t just added to ActivationInherit.",
      "revId": "1457f5a24ee918ff3c0932cd86bbc472de74f296",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e08ea04_6447c418",
        "filename": "activation.hpp",
        "patchSetId": 3
      },
      "lineNbr": 345,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-06-03T18:42:48Z",
      "side": 1,
      "message": "FYI: The intent of this patch is to refactor out code so it can be used for new new daemon. I have mentioned that as part of patch description. Also, this is more of a stop gap solution until we converge back to a single daemon in which case this property will come from BMCWeb itself as mentioned in https://gerrit.openbmc.org/c/openbmc/phosphor-bmc-code-mgmt/+/70665/comment/563e72bd_87faa007/",
      "parentUuid": "e4b25ba2_7bb87c6c",
      "revId": "1457f5a24ee918ff3c0932cd86bbc472de74f296",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}