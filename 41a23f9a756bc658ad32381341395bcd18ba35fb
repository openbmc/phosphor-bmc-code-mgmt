{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "49b87a39_bb445978",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2024-06-24T19:15:12Z",
      "side": 1,
      "message": "Could we just modify the service file xyz.openbmc_project.Software.Manager.service.in to not run the new app or to not restart always?",
      "revId": "41a23f9a756bc658ad32381341395bcd18ba35fb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "586df21d_82e3490d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-06-25T01:01:24Z",
      "side": 1,
      "message": "My understanding was that we want the new service to run by default. About disabling the restart, i am not sure if it will fix the CIT failure because first invocation of daemon will still fail.",
      "parentUuid": "49b87a39_bb445978",
      "revId": "41a23f9a756bc658ad32381341395bcd18ba35fb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb744dda_2b777a42",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2024-06-25T19:23:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "586df21d_82e3490d",
      "revId": "41a23f9a756bc658ad32381341395bcd18ba35fb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5c350b9_d2ee5515",
        "filename": "software_manager.cpp",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2024-06-24T02:44:36Z",
      "side": 1,
      "message": "Should this be done in a coroutine context?",
      "revId": "41a23f9a756bc658ad32381341395bcd18ba35fb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5db02579_da2052ea",
        "filename": "software_manager.cpp",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-06-24T17:25:04Z",
      "side": 1,
      "message": "Is there a reason u want to do this in a coroutine context?\n\nPS: The last patch in stack will add SoftwareManager implementation which will register the server object with the D-Bus to asynchronously handle requests.",
      "parentUuid": "e5c350b9_d2ee5515",
      "revId": "41a23f9a756bc658ad32381341395bcd18ba35fb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3918849f_3a83c83d",
        "filename": "software_manager.cpp",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2024-06-25T03:57:18Z",
      "side": 1,
      "message": "This `sdbusplus::async` is new to me and I was referring the example code in sdbusplus repo, which uses a coroutine to do this.\nSee https://github.com/openbmc/sdbusplus/blob/master/example/calculator-aserver.cpp#L52-L55\n\nI am not sure if it\u0027s neccessary or not, that why I asked the above question.",
      "parentUuid": "5db02579_da2052ea",
      "revId": "41a23f9a756bc658ad32381341395bcd18ba35fb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "06a7b54a_6e38cd7c",
        "filename": "software_manager.cpp",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-06-25T18:52:47Z",
      "side": 1,
      "message": "Sure, i have made this change in latest patch to reflect this.\n\nMy understanding - this is more of a choice depending upon how the code is written. \nThe example you showed defers requesting the serviceName until the process is running.",
      "parentUuid": "3918849f_3a83c83d",
      "revId": "41a23f9a756bc658ad32381341395bcd18ba35fb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}