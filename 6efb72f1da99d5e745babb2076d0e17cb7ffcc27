{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "206d57d1_985a8a98",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-08-06T18:46:13Z",
      "side": 1,
      "message": "@kevin.tung.openbmc@gmail.com Do you have an EM patch to add MPS Type to https://github.com/openbmc/entity-manager/blob/master/schemas/firmware.json#L30? If not, please raise and share it here. Thanks",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "42fa51a1_15d4f6e1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-08-07T12:28:15Z",
      "side": 1,
      "message": "Yes, the EM patch for it is https://gerrit.openbmc.org/c/openbmc/entity-manager/+/82575.",
      "parentUuid": "206d57d1_985a8a98",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c485a6ff_c24a5181",
        "filename": "common/include/pmbus.hpp",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-08-06T17:32:55Z",
      "side": 1,
      "message": "Enum members shall be lowerCamelCase. Please follow https://github.com/openbmc/docs/blob/master/cpp-style-and-conventions.md#constants.",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "96489287_ae250d99",
        "filename": "common/include/pmbus.hpp",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-08-07T12:28:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c485a6ff_c24a5181",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "317b1777_fac4585f",
        "filename": "i2c-vr/mps/mp2x6xx.cpp",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-08-06T17:32:55Z",
      "side": 1,
      "message": "Please use lowerCamelCase for enum members.",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f477d3d7_98446ce3",
        "filename": "i2c-vr/mps/mp2x6xx.cpp",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-08-07T12:28:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "317b1777_fac4585f",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cfa7d5f9_3e760090",
        "filename": "i2c-vr/mps/mp2x6xx.cpp",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-08-06T17:32:55Z",
      "side": 1,
      "message": "Can\u0027t use use normal string APIs for split?",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "220bee27_4af528e0",
        "filename": "i2c-vr/mps/mp2x6xx.cpp",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-08-07T12:28:15Z",
      "side": 1,
      "message": "Used normal string APIs for split.",
      "parentUuid": "cfa7d5f9_3e760090",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c150016_04db9f8a",
        "filename": "i2c-vr/mps/mp2x6xx.cpp",
        "patchSetId": 2
      },
      "lineNbr": 432,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-08-06T17:32:55Z",
      "side": 1,
      "message": "Why NOLInt?",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d27522c_1284ffce",
        "filename": "i2c-vr/mps/mp2x6xx.cpp",
        "patchSetId": 2
      },
      "lineNbr": 432,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-08-07T12:28:15Z",
      "side": 1,
      "message": "The NOLINT directive is used because the Clang analyzer repeatedly reports `Branch condition evaluates to a garbage value`. This warning likely results from passing the crc variable as a pointer to the overridden getCRC(uint32_t* checksum) function, which causes the analyzer to incorrectly assume it may be uninitialized.",
      "parentUuid": "8c150016_04db9f8a",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64fe8fdf_6c81517c",
        "filename": "i2c-vr/mps/mp2x6xx.cpp",
        "patchSetId": 2
      },
      "lineNbr": 432,
      "author": {
        "id": 1002222
      },
      "writtenOn": "2025-09-04T09:06:16Z",
      "side": 1,
      "message": "This kind of error occured in the other VR implementations as well. I still haven\u0027t figured out how to solve it. We agreed on keeping the NOLINT in such cases.",
      "parentUuid": "9d27522c_1284ffce",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c355cf8_aad22fd5",
        "filename": "i2c-vr/mps/mp2x6xx.cpp",
        "patchSetId": 2
      },
      "lineNbr": 454,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-08-06T17:32:55Z",
      "side": 1,
      "message": "Why true? Shouldn\u0027t this be false instead?",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b3aabe9_5de299f0",
        "filename": "i2c-vr/mps/mp2x6xx.cpp",
        "patchSetId": 2
      },
      "lineNbr": 454,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-08-07T12:28:15Z",
      "side": 1,
      "message": "The reset() function is called by the parent I2CVRDevice::updateDevice(). If it returns false, the update process is considered a failure (see [1]). However, since MPS VRs do not support a reset command, this implementation simply returns true.\n\n[1] https://github.com/openbmc/phosphor-bmc-code-mgmt/blob/9c05c3c63d2187a62bd2db2da1b24dca4f0c9816/i2c-vr/i2cvr_device.cpp#L34",
      "parentUuid": "4c355cf8_aad22fd5",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "828f8833_0f0149de",
        "filename": "i2c-vr/mps/mp2x6xx.hpp",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-08-06T17:32:55Z",
      "side": 1,
      "message": "Used in private section of class. Better to formward declare this and move the definition to .cpp file?",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d447f2c7_890af83c",
        "filename": "i2c-vr/mps/mp2x6xx.hpp",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-08-07T12:28:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "828f8833_0f0149de",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d7a463d_aa7c9c1f",
        "filename": "i2c-vr/mps/mp2x6xx.hpp",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-08-06T17:32:55Z",
      "side": 1,
      "message": "Used in private section of class. Better to formward declare this and move the definition to .cpp file?",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8c033fe_a3e509af",
        "filename": "i2c-vr/mps/mp2x6xx.hpp",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-08-07T12:28:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3d7a463d_aa7c9c1f",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a88a8e5e_c2eeae97",
        "filename": "i2c-vr/mps/mps.cpp",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-08-06T17:32:55Z",
      "side": 1,
      "message": "Why do u need this function? I don\u0027t see its doing anything specific to MPS?",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "206c1a36_9e95ab7f",
        "filename": "i2c-vr/mps/mps.cpp",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-08-07T12:28:15Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "a88a8e5e_c2eeae97",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f5844c0_a639abd7",
        "filename": "i2c-vr/mps/mps.cpp",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-08-06T17:32:55Z",
      "side": 1,
      "message": "Why this NOLINT?",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "75250e01_c5e56f4c",
        "filename": "i2c-vr/mps/mps.cpp",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-08-07T12:28:15Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "4f5844c0_a639abd7",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a817de3c_98fc693c",
        "filename": "i2c-vr/mps/mps.cpp",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-08-06T17:32:55Z",
      "side": 1,
      "message": "Why can\u0027t u do this directly in caller? There also u need to do the error handling based on return type? So i don\u0027t see u are saving any more lines by adding this indirection.",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49cf3d17_32c875c9",
        "filename": "i2c-vr/mps/mps.cpp",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-08-07T12:28:15Z",
      "side": 1,
      "message": "Changed to do it directly in caller.",
      "parentUuid": "a817de3c_98fc693c",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a27ef9b7_6131f4cb",
        "filename": "i2c-vr/mps/mps.hpp",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-08-06T17:32:55Z",
      "side": 1,
      "message": "Enum members shall be lowerCamelCase. Please follow https://github.com/openbmc/docs/blob/master/cpp-style-and-conventions.md#constants.",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2938aa23_b819bdba",
        "filename": "i2c-vr/mps/mps.hpp",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-08-07T12:28:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a27ef9b7_6131f4cb",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af226bd5_60bd1437",
        "filename": "i2c-vr/mps/mps.hpp",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-08-06T17:32:55Z",
      "side": 1,
      "message": "Enum members shall be lowerCamelCase. Please follow https://github.com/openbmc/docs/blob/master/cpp-style-and-conventions.md#constants.",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e12295d3_13a58608",
        "filename": "i2c-vr/mps/mps.hpp",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-08-07T12:28:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "af226bd5_60bd1437",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae066a76_0c55ddad",
        "filename": "i2c-vr/mps/mps.hpp",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-08-06T17:32:55Z",
      "side": 1,
      "message": "Why is this specific to MPS? How does other VRs handle this?",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43e10991_939834a3",
        "filename": "i2c-vr/mps/mps.hpp",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-08-07T12:28:15Z",
      "side": 1,
      "message": "Other VR implementations define control commands as constexpr uint8_t rather than using enum class, so they don’t need to explicitly static_cast to uint8_t. However, using enum class improves type safety and clarity, which I believe is the better approach.\n\nTo simplify the code and avoid repetitive casting, I replaced the original writeData() function with a more general buildByteVector() utility. This function constructs a std::vector\u003cuint8_t\u003e from a flexible set of arguments, including enums, integral types, and initializer lists, making it easier to assemble byte packets or command sequences in a consistent and readable way.",
      "parentUuid": "ae066a76_0c55ddad",
      "revId": "6efb72f1da99d5e745babb2076d0e17cb7ffcc27",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}