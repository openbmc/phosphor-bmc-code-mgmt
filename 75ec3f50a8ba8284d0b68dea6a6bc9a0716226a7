{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "811352c7_61bc3d74",
        "filename": "bmc/meson.build",
        "patchSetId": 7
      },
      "lineNbr": 80,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-21T14:56:52Z",
      "side": 1,
      "message": "I suspect you need `set_quoted` here?  Otherwise this generates some invalid C/C++ in the config.h:\n\n```\n#define STORAGE_MODE mmc\n```",
      "revId": "75ec3f50a8ba8284d0b68dea6a6bc9a0716226a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88042e43_21494446",
        "filename": "bmc/meson.build",
        "patchSetId": 7
      },
      "lineNbr": 80,
      "author": {
        "id": 1002108
      },
      "writtenOn": "2025-08-22T02:23:05Z",
      "side": 1,
      "message": "Yes. Please help review it again. Thanks.",
      "parentUuid": "811352c7_61bc3d74",
      "revId": "75ec3f50a8ba8284d0b68dea6a6bc9a0716226a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce046b72_cd360d90",
        "filename": "bmc/mmc/obmc-flash-mmc-mirroruboot.service.in",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-21T14:56:52Z",
      "side": 1,
      "message": "`mode\u003d@STORAGE_MODE@` should be sufficient; drop the quotes.  If you keep the quotes and add `conf.set_quoted` you end up with `\"mode\u003d\"mmc\"\"`, which is definitely broken.",
      "range": {
        "startLine": 7,
        "startChar": 12,
        "endLine": 7,
        "endChar": 33
      },
      "revId": "75ec3f50a8ba8284d0b68dea6a6bc9a0716226a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "542c550d_bdc08eba",
        "filename": "bmc/mmc/obmc-flash-mmc-mirroruboot.service.in",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1002108
      },
      "writtenOn": "2025-08-22T02:23:05Z",
      "side": 1,
      "message": "Yes. Please help review it again. Thanks.",
      "parentUuid": "ce046b72_cd360d90",
      "range": {
        "startLine": 7,
        "startChar": 12,
        "endLine": 7,
        "endChar": 33
      },
      "revId": "75ec3f50a8ba8284d0b68dea6a6bc9a0716226a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7160b8ce_1e76bf3d",
        "filename": "bmc/obmc-flash-bmc",
        "patchSetId": 7
      },
      "lineNbr": 585,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-21T14:56:52Z",
      "side": 1,
      "message": "This seems to still be using `by-path` which assumes a particular partition layout, rather than `by-partlabel`, right?",
      "revId": "75ec3f50a8ba8284d0b68dea6a6bc9a0716226a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19b147bb_9edb5670",
        "filename": "bmc/obmc-flash-bmc",
        "patchSetId": 7
      },
      "lineNbr": 585,
      "author": {
        "id": 1002108
      },
      "writtenOn": "2025-08-22T02:23:05Z",
      "side": 1,
      "message": "Yes, the by-partlabel doesn’t expose the boot partitions. For eMMC the boot partition is stable `/dev/mmcblk0boot0`, but for UFS the boot LUNs appears as `/dev/sdX`, which can change. That’s why I used by-path to find them.\n\nMaybe my way is not good enough. the `readlink -f /dev/disk/by-path/*ufshc-scsi-0:0:0:1` still depends on how the UFS LUNs are created (see the U-Boot commands below).\n\n```\nufs create lun 0 100000 (create 16GB user area)\nufs create boot 1 1000000 (create 4MB boot part 1)\nufs create boot 2 1000000 (create 4MB boot part 2)\n```\n\n```\nroot@ast2700-ufs:~# ls -l /dev/disk/by-partlabel/\nlrwxrwxrwx    1 root     root            10 Jan  1  1970 boot-a -\u003e ../../sdb2\nlrwxrwxrwx    1 root     root            10 Jan  1  1970 boot-b -\u003e ../../sdb3\nlrwxrwxrwx    1 root     root            10 Jan  1  1970 primary -\u003e ../../sdb1\nlrwxrwxrwx    1 root     root            10 Jan  1  1970 rofs-a -\u003e ../../sdb4\nlrwxrwxrwx    1 root     root            10 Jan  1  1970 rofs-b -\u003e ../../sdb5\nlrwxrwxrwx    1 root     root            10 Jan  1  1970 rwfs -\u003e ../../sdb6\n\nroot@ast2700-ufs:~# readlink -f /dev/disk/by-path/*ufshc-scsi-0:0:0:1\n/dev/sdc\n```",
      "parentUuid": "7160b8ce_1e76bf3d",
      "revId": "75ec3f50a8ba8284d0b68dea6a6bc9a0716226a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e5029ba_c2fd793b",
        "filename": "bmc/obmc-flash-bmc",
        "patchSetId": 7
      },
      "lineNbr": 585,
      "author": {
        "id": 1002108
      },
      "writtenOn": "2025-09-30T03:09:10Z",
      "side": 1,
      "message": "@patrick@stwcx.xyz Do you have any idea about this commit? Thanks.",
      "parentUuid": "19b147bb_9edb5670",
      "revId": "75ec3f50a8ba8284d0b68dea6a6bc9a0716226a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8a5285b_b1d2846a",
        "filename": "bmc/obmc-flash-bmc",
        "patchSetId": 7
      },
      "lineNbr": 585,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-09-30T20:56:46Z",
      "side": 1,
      "message": "It\u0027s not clear to me why you want to use `by-path` instead of `by-partlabel`.  It looks like boot-a and boot-b show up in your example here when using `by-partlabel`.",
      "parentUuid": "7e5029ba_c2fd793b",
      "revId": "75ec3f50a8ba8284d0b68dea6a6bc9a0716226a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d0eaa35_6ac9e083",
        "filename": "bmc/obmc-flash-bmc",
        "patchSetId": 7
      },
      "lineNbr": 585,
      "author": {
        "id": 1002108
      },
      "writtenOn": "2025-10-01T01:18:23Z",
      "side": 1,
      "message": "The boot partitions do not carry a GPT and therefore never appear under `/dev/disk/by-partlabel`. U-Boot is usually stored in the boot partitions. The boot-a and boot-b partitions under `/dev/disk/by-partlabel` usually contain Linux FIT images.\n\nEMMC:\n\n```\nroot@ast2600-emmc~# ls -l /dev/disk/by-partlabel/\nlrwxrwxrwx    1 root     root            15 Jan  1  1970 boot-a -\u003e ../../mmcblk0p2\nlrwxrwxrwx    1 root     root            15 Jan  1  1970 boot-b -\u003e ../../mmcblk0p3\nlrwxrwxrwx    1 root     root            15 Jan  1  1970 primary -\u003e ../../mmcblk0p1\nlrwxrwxrwx    1 root     root            15 Jan  1  1970 rofs-a -\u003e ../../mmcblk0p4\nlrwxrwxrwx    1 root     root            15 Jan  1  1970 rofs-b -\u003e ../../mmcblk0p5\nlrwxrwxrwx    1 root     root            15 Jan  1  1970 rwfs -\u003e ../../mmcblk0p6\n\nroot@ast2600-emmc:~# ls -l /dev/disk/by-path/\nlrwxrwxrwx    1 root     root            13 Jan  1  1970 platform-1e750100.sdhci -\u003e ../../mmcblk0\nlrwxrwxrwx    1 root     root            18 Jan  1  1970 platform-1e750100.sdhci-boot0 -\u003e ../../mmcblk0boot0\nlrwxrwxrwx    1 root     root            18 Jan  1  1970 platform-1e750100.sdhci-boot1 -\u003e ../../mmcblk0boot1\ndrwxr-xr-x    7 root     root           140 Jan  1  1970 platform-1e750100.sdhci-part\nlrwxrwxrwx    1 root     root            15 Jan  1  1970 platform-1e750100.sdhci-part1 -\u003e ../../mmcblk0p1\nlrwxrwxrwx    1 root     root            15 Jan  1  1970 platform-1e750100.sdhci-part2 -\u003e ../../mmcblk0p2\nlrwxrwxrwx    1 root     root            15 Jan  1  1970 platform-1e750100.sdhci-part3 -\u003e ../../mmcblk0p3\nlrwxrwxrwx    1 root     root            15 Jan  1  1970 platform-1e750100.sdhci-part4 -\u003e ../../mmcblk0p4\nlrwxrwxrwx    1 root     root            15 Jan  1  1970 platform-1e750100.sdhci-part5 -\u003e ../../mmcblk0p5\nlrwxrwxrwx    1 root     root            15 Jan  1  1970 platform-1e750100.sdhci-part6 -\u003e ../../mmcblk0p6\n```\n\nUFS:\n\n```\nroot@ast2700-ufs:~# ls -l /dev/disk/by-partlabel/\nlrwxrwxrwx    1 root     root            10 Jan  1  1970 boot-a -\u003e ../../sda2\nlrwxrwxrwx    1 root     root            10 Jan  1  1970 boot-b -\u003e ../../sda3\nlrwxrwxrwx    1 root     root            10 Jan  1  1970 primary -\u003e ../../sda1\nlrwxrwxrwx    1 root     root            10 Jan  1  1970 rofs-a -\u003e ../../sda4\nlrwxrwxrwx    1 root     root            10 Jan  1  1970 rofs-b -\u003e ../../sda5\nlrwxrwxrwx    1 root     root            10 Jan  1  1970 rwfs -\u003e ../../sda6\nroot@ast2700-ufs:~# ls -l /dev/disk/by-path/\nlrwxrwxrwx    1 root     root             9 Jan  1  1970 platform-12c08200.ufshc-scsi-0:0:0:0 -\u003e ../../sda\ndrwxr-xr-x    7 root     root           140 Jan  1  1970 platform-12c08200.ufshc-scsi-0:0:0:0-part\nlrwxrwxrwx    1 root     root            10 Jan  1  1970 platform-12c08200.ufshc-scsi-0:0:0:0-part1 -\u003e ../../sda1\nlrwxrwxrwx    1 root     root            10 Jan  1  1970 platform-12c08200.ufshc-scsi-0:0:0:0-part2 -\u003e ../../sda2\nlrwxrwxrwx    1 root     root            10 Jan  1  1970 platform-12c08200.ufshc-scsi-0:0:0:0-part3 -\u003e ../../sda3\nlrwxrwxrwx    1 root     root            10 Jan  1  1970 platform-12c08200.ufshc-scsi-0:0:0:0-part4 -\u003e ../../sda4\nlrwxrwxrwx    1 root     root            10 Jan  1  1970 platform-12c08200.ufshc-scsi-0:0:0:0-part5 -\u003e ../../sda5\nlrwxrwxrwx    1 root     root            10 Jan  1  1970 platform-12c08200.ufshc-scsi-0:0:0:0-part6 -\u003e ../../sda6\nlrwxrwxrwx    1 root     root             9 Jan  1  1970 platform-12c08200.ufshc-scsi-0:0:0:1 -\u003e ../../sdb\nlrwxrwxrwx    1 root     root             9 Jan  1  1970 platform-12c08200.ufshc-scsi-0:0:0:2 -\u003e ../../sdc\n```",
      "parentUuid": "a8a5285b_b1d2846a",
      "revId": "75ec3f50a8ba8284d0b68dea6a6bc9a0716226a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38552249_9408ced9",
        "filename": "bmc/obmc-flash-bmc",
        "patchSetId": 7
      },
      "lineNbr": 585,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-10-03T17:01:15Z",
      "side": 1,
      "message": "Why aren\u0027t we adding a GPT for them?  This is not obvious to me.\n\nIf we don\u0027t have a GPT for them, how do we update them from Linux?\n\nAre they stored in the MBR location?  If so, can we use the symlink from the `boot-a` to find the parent device?",
      "parentUuid": "4d0eaa35_6ac9e083",
      "revId": "75ec3f50a8ba8284d0b68dea6a6bc9a0716226a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37684b1f_2f60db68",
        "filename": "bmc/obmc-flash-bmc",
        "patchSetId": 7
      },
      "lineNbr": 585,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-10-03T17:03:32Z",
      "side": 1,
      "message": "I\u0027m asking these questions because any time we start hard-coding hardware-oriented paths, it becomes wrong for one platform or another.  We have no way to know if this code is right for Nuvoton or RaspberryPI-5 or any other chip.  I\u0027m assuming it is correct for Aspeed (2700 specifically) since you\u0027re making the contributions, but we don\u0027t want our code tied to a particular chip.  This is good even for you when you consider it might not even work on the \"2800\".",
      "parentUuid": "38552249_9408ced9",
      "revId": "75ec3f50a8ba8284d0b68dea6a6bc9a0716226a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e75cb020_6c34c577",
        "filename": "bmc/obmc-flash-bmc",
        "patchSetId": 7
      },
      "lineNbr": 585,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2025-10-03T20:07:19Z",
      "side": 1,
      "message": "These are hardware partitions created external command to the device they create a unique logical sector number space.  the roms read raw content.   They are not expecting formatting and don\u0027t have code to parse partitions.  (This is similar to NVME namespaces but I don\u0027t know of anyone using those for booting yet).\n\nOn eMMC they can be updated from Linux but are provisioned by additional commands. the commands reserve a connanded number of sectors for them reducing the logical size of the main device.  I expect similar for ufs.\n\nfor Patrick\u0027s raspberry pi example the soc has a large rom that starts on the GPU and reads files from mbr marked boot partition as fat.  an open source can load from USB host, USB device, SPI, SD card, or similar.  \n\nThe question should be: is there a better way to go from the other partition back to the hardware selected by the ROM.\n\nthe difficulty is when we can choose to boot from eg removable media (SD card, USB drive, etc) with the boot started on nor instead of a hardware partition device like ufs or eMMC.  At some point this will require system specific configuration.\n\n\nI think the best we can do is s start with the root and try to find the same physical device.  I agree it\u0027s a bad choice to use the sysfs pathbaw d on device tree names we already have examples of that changing over time.\n\nCaan we find root and have some known fixed relationship using the scsi id?",
      "parentUuid": "37684b1f_2f60db68",
      "revId": "75ec3f50a8ba8284d0b68dea6a6bc9a0716226a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "856ff8a5_4b9101dc",
        "filename": "bmc/obmc-flash-bmc",
        "patchSetId": 7
      },
      "lineNbr": 585,
      "author": {
        "id": 1002108
      },
      "writtenOn": "2025-10-07T03:20:15Z",
      "side": 1,
      "message": "@patrick@stwcx.xyz\nThe U-Boot boot partition isn’t described by the GPT. In obmc-flash-bmc, we need to locate that partition and update it using dd.\nhttps://github.com/openbmc/phosphor-bmc-code-mgmt/blob/master/bmc/obmc-flash-bmc#L578-L586\n\n```\n    # Update u-boot if needed\n    bootPartition\u003d\"mmcblk0boot0\"\n    devUBoot\u003d\"/dev/${bootPartition}\"\n    imgUBoot\u003d\"${imgpath}/${version}/image-u-boot\"\n    if [ \"$(cmp_uboot \"${devUBoot}\" \"${imgUBoot}\")\" !\u003d \"0\" ]; then\n        echo 0 \u003e \"/sys/block/${bootPartition}/force_ro\"\n        dd if\u003d\"${imgUBoot}\" of\u003d\"${devUBoot}\"\n        echo 1 \u003e \"/sys/block/${bootPartition}/force_ro\"\n    fi\n```\n\nI don’t have other chip hardware right now. If we adopt those platforms and issues arise, we can keep improving this script.\n\n\n@mdmii@outlook.com\neMMC exposes fixed node names like /dev/mmcblk0, /dev/mmcblk0boot0, and /dev/mmcblk0boot1. However, UFS depends on how to create UFS LUN partition. For example in U-Boot:\n\n```\nufs create lun 0 100000 (create 16GB user area)\nufs create boot 1 1000000 (create 4MB boot part 1)\nufs create boot 2 1000000 (create 4MB boot part 2)\n```\n\nIt also related [U-Boot boot command](https://github.com/AspeedTech-BMC/u-boot/blob/aspeed-master-v2023.10/include/configs/evb_ast2700.h#L29) selects the boot target and then loads the kernel via scsi. Once Linux is up, we get /dev/sdX for access.\n\n```\nufsboota\u003dsetenv bootpart 2; setenv rootfs rofs-a; run setufsargs; ext4load scsi 0:${bootpart} ${loadaddr} fitImage \u0026\u0026 bootm ${loadaddr}; echo Error loading kernel FIT image\\0\" \\\n```\n\nI don’t have a better way to find the boot LUN in the Linux.",
      "parentUuid": "e75cb020_6c34c577",
      "revId": "75ec3f50a8ba8284d0b68dea6a6bc9a0716226a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9dd61ec_7325b306",
        "filename": "meson.options",
        "patchSetId": 7
      },
      "lineNbr": 17,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-21T14:56:52Z",
      "side": 1,
      "message": "We maybe need a \u0027none\u0027 or \u0027spi\u0027 also?  Or else should this be \u0027mmc-storage-mode\u0027, since it is only used when `bmc-layout \u003d\u003d mmc`?  Or should we just add a \u0027ufs\u0027 to the \u0027bmc-layout\u0027?",
      "revId": "75ec3f50a8ba8284d0b68dea6a6bc9a0716226a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78d19fbf_ec7433e1",
        "filename": "meson.options",
        "patchSetId": 7
      },
      "lineNbr": 17,
      "author": {
        "id": 1002108
      },
      "writtenOn": "2025-08-22T02:23:05Z",
      "side": 1,
      "message": "I don\u0027t think we need a `ufs` to the bmc-layout. The build process is essentially the same as MMC; only the sector size differs. I’ve changed the option to `mmc-storage-mode`. Please review again. Thanks.",
      "parentUuid": "e9dd61ec_7325b306",
      "revId": "75ec3f50a8ba8284d0b68dea6a6bc9a0716226a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}