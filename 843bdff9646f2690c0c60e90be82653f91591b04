{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1aa65b7b_436aeb73",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 86
      },
      "lineNbr": 0,
      "author": {
        "id": 1002325
      },
      "writtenOn": "2025-02-13T19:11:46Z",
      "side": 1,
      "message": "Hey Alexander, I\u0027ve some comments on the patch, please take a look.",
      "revId": "843bdff9646f2690c0c60e90be82653f91591b04",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bfe953e1_85a9677a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 86
      },
      "lineNbr": 0,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-14T11:52:06Z",
      "side": 1,
      "message": "Thank You üëç",
      "parentUuid": "1aa65b7b_436aeb73",
      "revId": "843bdff9646f2690c0c60e90be82653f91591b04",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ccd76d6_25b8e4a3",
        "filename": "common/include/software_config.hpp",
        "patchSetId": 86
      },
      "lineNbr": 29,
      "author": {
        "id": 1002325
      },
      "writtenOn": "2025-02-13T19:17:39Z",
      "side": 1,
      "message": "How would the code handle different descriptors for various devices in the EntityManager config? For example, one device has both UUID and IANA as descriptors, while another has only IANA.",
      "revId": "843bdff9646f2690c0c60e90be82653f91591b04",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97ccb56a_c8d7707e",
        "filename": "common/include/software_config.hpp",
        "patchSetId": 86
      },
      "lineNbr": 29,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-13T20:06:57Z",
      "side": 1,
      "message": "When you extend the EM schema to add more descriptors, you would need to extend the common code to handle those. Right now IANA has been added as base use case, you can add UUID if you need it.\n\nPlease see if you have any other question, otherwise we will mark this as resolved.",
      "parentUuid": "9ccd76d6_25b8e4a3",
      "revId": "843bdff9646f2690c0c60e90be82653f91591b04",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3698a09d_3a74ed55",
        "filename": "common/include/software_config.hpp",
        "patchSetId": 86
      },
      "lineNbr": 29,
      "author": {
        "id": 1002325
      },
      "writtenOn": "2025-02-14T05:23:15Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "97ccb56a_c8d7707e",
      "revId": "843bdff9646f2690c0c60e90be82653f91591b04",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18620979_c7e5bebc",
        "filename": "common/include/software_config.hpp",
        "patchSetId": 86
      },
      "lineNbr": 29,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-02-14T16:01:41Z",
      "side": 1,
      "message": "I had posted a similar comment, there is coupling in the code to the image package format and expected firmware info and software config to IANA, which in a way beats the purpose of *common* code. If a package format/software config has to be introduced, the current code would need refactor. I will leave it to maintainers discretion.\n\nSoftwareConfig class should not be tied to Vendor IANA, but should be able to inherit a combination of firmware information that may not have IANA. It could be PCIe Vendor ID for example.\n\nDevice class should be handling the component data in an abstract way instead of handling PLDM package in `continueUpdateWithMappedPackage`.",
      "parentUuid": "3698a09d_3a74ed55",
      "revId": "843bdff9646f2690c0c60e90be82653f91591b04",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b477fcb_0b8b2897",
        "filename": "common/src/device.cpp",
        "patchSetId": 86
      },
      "lineNbr": 42,
      "author": {
        "id": 1002325
      },
      "writtenOn": "2025-02-13T19:11:46Z",
      "side": 1,
      "message": "Shall we use unique pointer instead of raw pointer?",
      "revId": "843bdff9646f2690c0c60e90be82653f91591b04",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a45bf8f_380c1e2c",
        "filename": "common/src/device.cpp",
        "patchSetId": 86
      },
      "lineNbr": 42,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-14T11:52:06Z",
      "side": 1,
      "message": "Sure. Added the unique_ptr with custom deleter to munmap the package.",
      "parentUuid": "3b477fcb_0b8b2897",
      "revId": "843bdff9646f2690c0c60e90be82653f91591b04",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb59c0fb_a9ce0970",
        "filename": "common/src/device.cpp",
        "patchSetId": 86
      },
      "lineNbr": 90,
      "author": {
        "id": 1002325
      },
      "writtenOn": "2025-02-13T19:11:46Z",
      "side": 1,
      "message": "Shouldn\u0027t this be logged as an error instead of info?",
      "revId": "843bdff9646f2690c0c60e90be82653f91591b04",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d99d34cb_09659848",
        "filename": "common/src/device.cpp",
        "patchSetId": 86
      },
      "lineNbr": 90,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-14T11:52:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eb59c0fb_a9ce0970",
      "revId": "843bdff9646f2690c0c60e90be82653f91591b04",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c87c3b2_14444853",
        "filename": "common/src/device.cpp",
        "patchSetId": 86
      },
      "lineNbr": 136,
      "author": {
        "id": 1002325
      },
      "writtenOn": "2025-02-13T19:11:46Z",
      "side": 1,
      "message": "Please add an alias to improve readability.\n\n`using RequestedApplyTimes \u003d sdbusplus::common::xyz::openbmc_project::software::ApplyTime::RequestedApplyTimes;\n`\n\nWe can replace it with `RequestedApplyTimes applyTime`",
      "revId": "843bdff9646f2690c0c60e90be82653f91591b04",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "065be4ba_3335adbe",
        "filename": "common/src/device.cpp",
        "patchSetId": 86
      },
      "lineNbr": 136,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-14T11:52:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5c87c3b2_14444853",
      "revId": "843bdff9646f2690c0c60e90be82653f91591b04",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13306409_fd09b434",
        "filename": "common/src/software_manager.cpp",
        "patchSetId": 86
      },
      "lineNbr": 85,
      "author": {
        "id": 1002325
      },
      "writtenOn": "2025-02-13T19:11:46Z",
      "side": 1,
      "message": "Can we explicitly initialize these variables? `std::string compatible{};`",
      "revId": "843bdff9646f2690c0c60e90be82653f91591b04",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "74f1c30a_19c9a02a",
        "filename": "common/src/software_manager.cpp",
        "patchSetId": 86
      },
      "lineNbr": 85,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-14T11:52:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "13306409_fd09b434",
      "revId": "843bdff9646f2690c0c60e90be82653f91591b04",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1800357f_babc4fc1",
        "filename": "common/src/software_update.cpp",
        "patchSetId": 86
      },
      "lineNbr": 37,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-13T18:17:56Z",
      "side": 1,
      "message": "\"Requesting image update with {FD}\"",
      "revId": "843bdff9646f2690c0c60e90be82653f91591b04",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba3c49c4_83fe8899",
        "filename": "common/src/software_update.cpp",
        "patchSetId": 86
      },
      "lineNbr": 37,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-14T11:52:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1800357f_babc4fc1",
      "revId": "843bdff9646f2690c0c60e90be82653f91591b04",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f85e938_ba061b69",
        "filename": "common/src/software_update.cpp",
        "patchSetId": 86
      },
      "lineNbr": 61,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-13T18:17:56Z",
      "side": 1,
      "message": "Please make this debug level and if there is any other info level too, lets make them debug.",
      "revId": "843bdff9646f2690c0c60e90be82653f91591b04",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15322160_393fd699",
        "filename": "common/src/software_update.cpp",
        "patchSetId": 86
      },
      "lineNbr": 61,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-14T11:52:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5f85e938_ba061b69",
      "revId": "843bdff9646f2690c0c60e90be82653f91591b04",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}