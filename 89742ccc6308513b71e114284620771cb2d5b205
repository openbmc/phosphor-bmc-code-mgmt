{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6ae523c3_9958a77f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 44
      },
      "lineNbr": 7,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-09T01:59:04Z",
      "side": 1,
      "message": "fw update is redundant as we are already in code-mgmt repo, please remove it and update the main line to better reflect the intent.",
      "revId": "89742ccc6308513b71e114284620771cb2d5b205",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "384ccdc1_acb6eada",
        "filename": "/COMMIT_MSG",
        "patchSetId": 44
      },
      "lineNbr": 9,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-09T01:59:04Z",
      "side": 1,
      "message": "Looks like you are limiting the scope to BIOS only now as dir name is bios-spi, if that is so, its better to update the comment to reflect so and make changes at other places(if any) to reflect this.",
      "revId": "89742ccc6308513b71e114284620771cb2d5b205",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c71f229_5c12aef4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 44
      },
      "lineNbr": 9,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-14T11:52:21Z",
      "side": 1,
      "message": "How is it limited to BIOS only?\nWhy would we limit it in that way?\n\nThe software has no way of knowing what\u0027s on the SPI flash, short of reading it and looking for UEFI headers and such.",
      "parentUuid": "384ccdc1_acb6eada",
      "revId": "89742ccc6308513b71e114284620771cb2d5b205",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ded55568_e5ff2726",
        "filename": "/COMMIT_MSG",
        "patchSetId": 44
      },
      "lineNbr": 15,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-09T01:59:04Z",
      "side": 1,
      "message": "What do you mean by very limited?",
      "revId": "89742ccc6308513b71e114284620771cb2d5b205",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "730e45ea_ef05f6f7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 44
      },
      "lineNbr": 15,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-14T11:52:21Z",
      "side": 1,
      "message": "We send one command, of which there is no guarantee that it works.\nJust a quirk of the device i was testing on.\n\nThese quirks naturally accumulate. It\u0027s not needed for AMD platform.",
      "parentUuid": "ded55568_e5ff2726",
      "revId": "89742ccc6308513b71e114284620771cb2d5b205",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "856ec285_bbf07295",
        "filename": "/COMMIT_MSG",
        "patchSetId": 44
      },
      "lineNbr": 17,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-09T01:59:04Z",
      "side": 1,
      "message": "otherwise with respect to what? Better to include it in same line for continuation.",
      "revId": "89742ccc6308513b71e114284620771cb2d5b205",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6abdb243_67c119de",
        "filename": "/COMMIT_MSG",
        "patchSetId": 44
      },
      "lineNbr": 17,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-14T11:52:21Z",
      "side": 1,
      "message": "otherwise, if the fw does not come with intel flash descriptor.",
      "parentUuid": "856ec285_bbf07295",
      "revId": "89742ccc6308513b71e114284620771cb2d5b205",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b4ccd3f_a9c6764e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 44
      },
      "lineNbr": 21,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-09T01:59:04Z",
      "side": 1,
      "message": "For Tested section, please add relevant output -\n1. Redfish firmware inventory showing version of BIOS.\n2. Firmware Update start with task generation.\n3. Firmware Update Task status completion.\n4. Redfish firmware inventory to show version got updated for BIOS.",
      "revId": "89742ccc6308513b71e114284620771cb2d5b205",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "549511a7_ba0b826a",
        "filename": "bios-spi/README.md",
        "patchSetId": 44
      },
      "lineNbr": 10,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-09T01:59:04Z",
      "side": 1,
      "message": "Configuration.BIOS\n\nPlease update Readme to reflect recent changes.",
      "revId": "89742ccc6308513b71e114284620771cb2d5b205",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "48be77df_596bf7c0",
        "filename": "bios-spi/README.md",
        "patchSetId": 44
      },
      "lineNbr": 10,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-14T11:52:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "549511a7_ba0b826a",
      "revId": "89742ccc6308513b71e114284620771cb2d5b205",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a50dc47_b58bc2a6",
        "filename": "bios-spi/host_power.hpp",
        "patchSetId": 44
      },
      "lineNbr": 14,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-09T01:59:04Z",
      "side": 1,
      "message": "Don\u0027t define a new interface class. Please include /xyz/openbmc_project/State/Host/aserver.hpp and use the autogenerated bindings wherever you want to perform the operations. This will completely eliminate both .hpp and .cpp files you are creating here.",
      "revId": "89742ccc6308513b71e114284620771cb2d5b205",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ddaf92d4_62f49030",
        "filename": "bios-spi/host_power.hpp",
        "patchSetId": 44
      },
      "lineNbr": 14,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-14T11:52:21Z",
      "side": 1,
      "message": "Changed this to use the autogenerated bindings.\n\nSince there is still some logic and logging encapsulated here, i tend to want to keep this file.\n\nInlining the \u0027getHostPowerState\u0027 would be the easier of the 2,\nbut there is a couple of problems\n\n- host object path.\n  Currently we use \"/xyz/openbmc_project/state/host0\" but that is not sufficient for multi-host systems.\n  So we need some way to identify which host a device belongs to.\n\n- The delay for waiting for the host power transition is kind of arbitrary.\n  Currently we wait 10 seconds, but this may need to change.\n  The caller does not need to know/care about this.\n\n- Host state is non-binary. There are multiple states and transitions.\n  For our current use-case of device update, the interesting distinction\n  is if the device is powered or not. So we expose a simplified view of host state to the caller.",
      "parentUuid": "2a50dc47_b58bc2a6",
      "revId": "89742ccc6308513b71e114284620771cb2d5b205",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b9041e4_c92b4c05",
        "filename": "bios-spi/host_power.hpp",
        "patchSetId": 44
      },
      "lineNbr": 14,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-15T08:56:13Z",
      "side": 1,
      "message": "\u003e Changed this to use the autogenerated bindings.\n\u003e \n\u003e Since there is still some logic and logging encapsulated here, i tend to want to keep this file.\n\u003e \n\u003e Inlining the \u0027getHostPowerState\u0027 would be the easier of the 2,\n\u003e but there is a couple of problems\n\u003e \n\u003e - host object path.\n\u003e   Currently we use \"/xyz/openbmc_project/state/host0\" but that is not sufficient for multi-host systems.\n\u003e   So we need some way to identify which host a device belongs to.\n\nWe need to provide a solution for single host systems for now as thats the use case we are trying to cover.\n\nIdeally the ManagedHost decorator on the corresponding inventory item should provide the HostIndex but we don\u0027t have to solve that problem right now. In future,\nthe logic can be extended to support Multi host systems.\n\n\u003e \n\u003e - The delay for waiting for the host power transition is kind of arbitrary.\n\u003e   Currently we wait 10 seconds, but this may need to change.\n\u003e   The caller does not need to know/care about this.\n\u003e \n\u003e - Host state is non-binary. There are multiple states and transitions.\n\u003e   For our current use-case of device update, the interesting distinction\n\u003e   is if the device is powered or not. So we expose a simplified view of host state to the caller.",
      "parentUuid": "ddaf92d4_62f49030",
      "revId": "89742ccc6308513b71e114284620771cb2d5b205",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de06be9f_4131e2e9",
        "filename": "bios-spi/main.cpp",
        "patchSetId": 44
      },
      "lineNbr": 12,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-09T01:59:04Z",
      "side": 1,
      "message": "No need of this. Its already mentioned in Readme.",
      "revId": "89742ccc6308513b71e114284620771cb2d5b205",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f2eb9587_0e473069",
        "filename": "bios-spi/main.cpp",
        "patchSetId": 44
      },
      "lineNbr": 12,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-14T11:52:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "de06be9f_4131e2e9",
      "revId": "89742ccc6308513b71e114284620771cb2d5b205",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e57159c3_cab88794",
        "filename": "bios-spi/main.cpp",
        "patchSetId": 44
      },
      "lineNbr": 16,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-09T01:59:04Z",
      "side": 1,
      "message": "No need of manual update. Please update this code as a server class which is its intended use.",
      "revId": "89742ccc6308513b71e114284620771cb2d5b205",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16888176_405070ab",
        "filename": "bios-spi/main.cpp",
        "patchSetId": 44
      },
      "lineNbr": 16,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-14T11:52:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e57159c3_cab88794",
      "revId": "89742ccc6308513b71e114284620771cb2d5b205",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54052f57_4928af49",
        "filename": "bios-spi/meson.build",
        "patchSetId": 44
      },
      "lineNbr": 2,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-09T01:59:04Z",
      "side": 1,
      "message": "Better to directly include unless there is an intent to use this var somewhere else as well.",
      "revId": "89742ccc6308513b71e114284620771cb2d5b205",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b7c73aa7_d8b00bc8",
        "filename": "bios-spi/meson.build",
        "patchSetId": 44
      },
      "lineNbr": 2,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-14T11:52:21Z",
      "side": 1,
      "message": "used in test/bios-spi/meson.build.\n\nOtherwise would have to create static library for spi device updater code.",
      "parentUuid": "54052f57_4928af49",
      "revId": "89742ccc6308513b71e114284620771cb2d5b205",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25c89f40_ebf35193",
        "filename": "bios-spi/meson.build",
        "patchSetId": 44
      },
      "lineNbr": 8,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-09T01:59:04Z",
      "side": 1,
      "message": "Better to include this directly down.",
      "revId": "89742ccc6308513b71e114284620771cb2d5b205",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "544afa0a_a0806772",
        "filename": "bios-spi/meson.build",
        "patchSetId": 44
      },
      "lineNbr": 8,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-14T11:52:21Z",
      "side": 1,
      "message": "used in test/bios-spi/meson.build.\n\nOtherwise would have to create static library for spi device updater code.",
      "parentUuid": "25c89f40_ebf35193",
      "revId": "89742ccc6308513b71e114284620771cb2d5b205",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "550ef179_45480483",
        "filename": "bios-spi/spi_device.hpp",
        "patchSetId": 44
      },
      "lineNbr": 59,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-09T01:59:04Z",
      "side": 1,
      "message": "why do you need debug?",
      "revId": "89742ccc6308513b71e114284620771cb2d5b205",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8fd51216_14e65b66",
        "filename": "bios-spi/spi_device.hpp",
        "patchSetId": 44
      },
      "lineNbr": 59,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-14T11:52:21Z",
      "side": 1,
      "message": "in  bios-spi/spi_device.cpp +360\n\ni do not delete the component image file (which was written to file, for using e.g. flashcp) after the update is done. \n\nThis provides a way to manually check if the image was correctly extracted from the PLDM package.\n\nBut since we have tests for that, we can remove \u0027bool debug\u0027",
      "parentUuid": "550ef179_45480483",
      "revId": "89742ccc6308513b71e114284620771cb2d5b205",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}