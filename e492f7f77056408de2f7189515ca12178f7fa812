{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6b070700_751429cd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2025-02-19T20:22:39Z",
      "side": 1,
      "message": "The code already handles deleting the destination files whenever the source files are deleted: https://github.com/openbmc/phosphor-bmc-code-mgmt/blob/85aed223a200a7769a27a281662ce991db09420a/bmc/sync_manager.cpp#L64\n\n```\nexecl(\"/usr/bin/rsync\", \"rsync\", \"-a\", \"--delete\",\n```\n\nThe commit message says this change will handle the scenario when source files are deleted, but what\u0027s being proposed instead is doing a one-time blind delete of files in the destination directory that don\u0027t exist in the source directory before the sync manager starts up. This is not what we want.\n\nOne example could be that the current flash device ran out of space and it\u0027s non-responsive, so the customer performs a factory reset which wipes out all the data. Then with the existing code they can switch to the alternate flash and all their previous synced data would still be there as expected (the sync manager is a form of backup).\nWith this proposed change, we\u0027d delete all the data from the alternate flash when the BMC starts up just because it didn\u0027t exist in the current flash, which could be empty because of factory reset, or chip replacement, etc.",
      "revId": "e492f7f77056408de2f7189515ca12178f7fa812",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4bbe8341_7f3ca8f6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001371
      },
      "writtenOn": "2025-02-20T06:25:44Z",
      "side": 1,
      "message": "\u003e The code already handles deleting the destination files whenever the source files are deleted\n\nYup,  What I meant here is the second scenario, `such as a factory reset`.\n\nWhat I expect is that the configuration in the backup should be exactly the same as the main flash (as long as the main flash has been booted normally). Even if the configuration in the main flash is empty, they should mirror each other.\n\nI encountered a case like this:\nWe have a network configuration in the `settingsd`  that needs to be synchronized (related to ncsi/rj45 port selection). The` settingsd` configuration will have a `default code` value, and when modified, it generates a file and synchronizes it.\n\nWhen the default code is set to rj45 and the cable is connected to the rj45 port, everything works fine. However, when someone mistakenly sets it to ncsi, it causes a disconnection. \nA `factory reset` might restore its operation, but because the second image retains the incorrect ncsi configuration, it may cause the second image to lose connection the next time it\u0027s booted.\n\nOf course, this is just an example . It highlights that if we don\u0027t perform deletion, synchronizing certain configurations could result in mismatched configurations between the two images, leading to unexpected issues.",
      "parentUuid": "6b070700_751429cd",
      "revId": "e492f7f77056408de2f7189515ca12178f7fa812",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "751717d8_ca9f5976",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2025-02-20T17:28:37Z",
      "side": 1,
      "message": "I see your point, although I\u0027m still concerned that we\u0027d not support the case anymore that I pointed out about after a factory reset I do want to boot from the second image and have all the previous data present because the data is good and useful to get the system back to where it was before.\n\nIn the case you described, perhaps the settingsd code could generate an empty file or a file with some default value if none is present, that\u0027d cause the sync to trigger and overwrite the file in the alternate version.\n\nIf that\u0027s not viable, I guess we could go with your change, although I\u0027d like to see if Lei has any opinions since he may be using systems with the static layout to make sure we don\u0027t break other people\u0027s use cases.",
      "parentUuid": "4bbe8341_7f3ca8f6",
      "revId": "e492f7f77056408de2f7189515ca12178f7fa812",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}