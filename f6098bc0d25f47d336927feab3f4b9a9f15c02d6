{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b47f9078_38bfdd64",
        "filename": "common/pldm/meson.build",
        "patchSetId": 13
      },
      "lineNbr": 2,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-30T02:20:56Z",
      "side": 1,
      "message": "I think we need some meson option to safeguard this compilation since you added a conditional inclusion of libpldm_dep.\n\nLet\u0027s say the meson option is software-common-code and enabled by default.\n\nWe can define a build flag, lets say\n\nbuild_common_code \u003d (get_option(\u0027software-common-code\u0027).allowed() or get_option(\u0027Updater-X\u0027).allowed() or ...)\n\n\nif (build_common_code)\n// Build the common code\nendif\n\nThe common code will not build from openbmc/openbmc when no package-config (for updater using common code) is enabled.\n\nAlso, the conditional inclusion of libpldm will also need a \"or\" of this build flag.\n \nThis is a suggestion so you would need to try and we can refine on the nomenclature.",
      "revId": "f6098bc0d25f47d336927feab3f4b9a9f15c02d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff4ebfcb_ceda739b",
        "filename": "common/pldm/meson.build",
        "patchSetId": 13
      },
      "lineNbr": 2,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-30T23:38:09Z",
      "side": 1,
      "message": "@alexander.hansen@9elements.com Agreed to take care of this in the common code diff. Hence marking as resolved on this patch.",
      "parentUuid": "b47f9078_38bfdd64",
      "revId": "f6098bc0d25f47d336927feab3f4b9a9f15c02d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66834a80_f7bed55a",
        "filename": "common/pldm/pldm_package_util.cpp",
        "patchSetId": 13
      },
      "lineNbr": 38,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-30T02:43:29Z",
      "side": 1,
      "message": "rename pp to packageParser. Please do this at other places in code too.",
      "revId": "f6098bc0d25f47d336927feab3f4b9a9f15c02d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e65218a_86d9b57e",
        "filename": "common/pldm/pldm_package_util.cpp",
        "patchSetId": 13
      },
      "lineNbr": 38,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-01-30T13:39:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "66834a80_f7bed55a",
      "revId": "f6098bc0d25f47d336927feab3f4b9a9f15c02d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8442c2c_4ced02ab",
        "filename": "common/pldm/pldm_package_util.cpp",
        "patchSetId": 13
      },
      "lineNbr": 203,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-30T02:43:29Z",
      "side": 1,
      "message": "rename pp to packageParser.",
      "revId": "f6098bc0d25f47d336927feab3f4b9a9f15c02d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d14309c7_e893d21d",
        "filename": "common/pldm/pldm_package_util.cpp",
        "patchSetId": 13
      },
      "lineNbr": 203,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-01-30T13:39:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b8442c2c_4ced02ab",
      "revId": "f6098bc0d25f47d336927feab3f4b9a9f15c02d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76ad3d71_74d4def9",
        "filename": "common/pldm/pldm_package_util.hpp",
        "patchSetId": 13
      },
      "lineNbr": 38,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-30T02:43:29Z",
      "side": 1,
      "message": "rename pp to packageParser",
      "revId": "f6098bc0d25f47d336927feab3f4b9a9f15c02d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7d8f9ee9_452bda32",
        "filename": "common/pldm/pldm_package_util.hpp",
        "patchSetId": 13
      },
      "lineNbr": 38,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-01-30T13:39:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "76ad3d71_74d4def9",
      "revId": "f6098bc0d25f47d336927feab3f4b9a9f15c02d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da976742_264c2614",
        "filename": "common/pldm/utils.hpp",
        "patchSetId": 13
      },
      "lineNbr": 24,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-30T02:43:29Z",
      "side": 1,
      "message": "Please move this API to PackageParser.cpp and drop both utils.hpp and utils.cpp. It doesn\u0027t seem reasonable to add two new files just for a to_string API which only gets used in PackageParser.",
      "revId": "f6098bc0d25f47d336927feab3f4b9a9f15c02d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af2845f9_5ed65284",
        "filename": "common/pldm/utils.hpp",
        "patchSetId": 13
      },
      "lineNbr": 24,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-01-30T13:39:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da976742_264c2614",
      "revId": "f6098bc0d25f47d336927feab3f4b9a9f15c02d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "860932ea_de28bd66",
        "filename": "meson.build",
        "patchSetId": 13
      },
      "lineNbr": 70,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-30T02:22:21Z",
      "side": 1,
      "message": "The conditional inclusion of common code should start from here.",
      "revId": "f6098bc0d25f47d336927feab3f4b9a9f15c02d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ca88e7a_550f9fb1",
        "filename": "meson.build",
        "patchSetId": 13
      },
      "lineNbr": 70,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-01-30T13:39:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "860932ea_de28bd66",
      "revId": "f6098bc0d25f47d336927feab3f4b9a9f15c02d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}